#!/bin/sh
################################################################
# Begin $rc_base/init.d/
#
# Description :
#
# Authors     : Daniel Kesler <kesler.daniel@gmail.com>
#
# Version     : 00.10
#
# Notes       :
#
###############################################################

. /etc/default/rc
. ${rc_functions}

test -r /etc/default/bluetooth && source /etc/default/bluetooth
test -r /etc/default/fabui && source /etc/default/fabui

[ -z $PYTHON_PATH ] && PYTHON_PATH=/usr/share/fabui/ext/py/

[ -z $BLUETOOTHD_PIDFILE ] && BLUETOOTHD_PIDFILE=/run/bluetooth.pid

[ -z $BLUETOOTHD_STARTUP ] && BLUETOOTHD_STARTUP="yes"
[ "$BLUETOOTHD_STARTUP" != "yes" ] && exit 0

BLUETOOTHD=/usr/sbin/bluetoothd
HCIATTACH=/usr/bin/hciattach
RFKILL=/usr/sbin/rfkill

UART_CONF=/etc/bluetooth/uart.conf
RFCOMM_CONF=/etc/bluetooth/rfcomm.conf

start_hci_dev()
{
   for dev in ${ACTIVE_HCI_DEVICES_ON_BOOT} ; do
      hciconfig $dev up > /dev/null 2>&1
   done
}

start_uarts()
{
   [ -x $HCIATTACH ] && [ -f $UART_CONF ] || return

   egrep -v '^[[:space:]]*(#|$)' $UART_CONF | while read i; do
      $HCIATTACH $i > /dev/null 2>&1
   done
}

stop_uarts()
{
   [ -x $HCIATTACH ] || return
   killall $(basename $HCIATTACH) > /dev/null 2>&1
   return 0
}

start_rfkill()
{
    [ -x $RFKILL ] || return 1
    $RFKILL unblock bluetooth
    return 0
}

stop_rfkill()
{
    [ -x $RFKILL ] || return 1
    $RFKILL block bluetooth
    return 0
}

rename_adapter()
{
    if [ -f "/mnt/live/mnt/boot/fabtotum.ini" ]; then
        python ${PYTHON_PATH}/fabtotum/bluetooth/rename_adapter.py /mnt/live/mnt/boot/fabtotum.ini
    fi
}

case "$1" in
  start)
        boot_msg "Starting Bluetooth daemon."
        rename_adapter
        start_uarts
        start_rfkill
        start_hci_dev
        start-stop-daemon -S -m -b -q -p $BLUETOOTHD_PIDFILE --exec $BLUETOOTHD -- -n $BLUETOOTHD_ARGS
        evaluate_retval
        ;;
  stop)
        boot_msg "Stopping Bluetooth daemon."
        start-stop-daemon -K -q -p $BLUETOOTHD_PIDFILE
        stop_uarts
        stop_rfkill
        evaluate_retval
        ;;
  restart|reload)
        ${0} stop
        sleep 1
        ${0} start
        ;;
  *)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
esac

exit $?


